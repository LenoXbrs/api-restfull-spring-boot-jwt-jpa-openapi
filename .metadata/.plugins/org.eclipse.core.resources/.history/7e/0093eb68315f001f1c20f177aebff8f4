package com.packt.cardatabase;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
//CommandLineRunner: interface que permite executarmos codigo antes da aplicação subir 
//@SpringBootApplication conjunto de tres anotações responsaveis por scanear classes e mais.
@SpringBootApplication
public class CardatabaseApplication implements CommandLineRunner {
	
	private static final Logger logger = LoggerFactory.getLogger(
	        CardatabaseApplication.class);


	
 

	public static void main(String[] args) {
		SpringApplication.run(CardatabaseApplication.class, args);
		logger.info("Aplication started");
	}
	


	@Override
	public void run(String... args) throws Exception {
//		Owner owner1 = new Owner("John" , "Johnson");
//	    Owner owner2 = new Owner("Mary" , "Robinson");
//	    ownerRepository.saveAll(Arrays.asList(owner1, owner2));
//
//
//		carRepository.save(new Car("Ford", "Mustang", "Red",
//                "ADF-1121", 2023, 59000, owner1));
//		carRepository.save(new Car("Nissan", "Leaf", "White",
//                "SSJ-3002", 2020, 29000, owner2));
//		carRepository.save(new Car("Toyota", "Prius",
//                "Silver", "KKO-0212", 2022, 39000, owner2));
//      // Fetch all cars and log to console
//      for (Car car : carRepository.findAll()) {
//          logger.info("brand: {}, model: {}",
//              car.getBrand(), car.getModel());
//      }



	}

}
